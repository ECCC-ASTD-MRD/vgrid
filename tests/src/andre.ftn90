program constructor

  use vGrid_Descriptors, only: vgrid_descriptor,vgd_new,vgd_print,vgd_free,VGD_OK,VGD_ERROR
  use Unit_Testing, only: ut_report

  implicit none

  type(vgrid_descriptor) :: vgd
  integer, parameter :: nk=27
  integer :: stat,k,i,nl_m=-1,nl_t=-1
  integer, dimension(:), pointer :: vipm,vipt,work_i
  real :: my_epsilon=1.e-6
  real, dimension(nk) :: sigma,sigma2
  real, dimension(:), pointer :: vcdm,vcdt,work
  real*8, dimension(:), pointer :: b_m_8,a_m_8,b_t_8,a_t_8,work_8
  logical :: OK=.true.
  logical, parameter :: write_control_L=.false.
  character (len=1) :: dumc_S
  character (len=256) :: file

  nullify(vipm,vipt,work_i,vcdm,vcdt,work,b_m_8,a_m_8,b_t_8,a_t_8,work_8)

  sigma=(/0.011000, 0.027000, 0.051000, 0.075000, 0.101000, 0.127000, 0.155000, 0.185000, 0.219000, 0.258000, 0.302000, 0.351000, 0.405000, 0.460000, 0.516000, 0.574000, 0.631000, 0.688000, 0.744000, 0.796000, 0.842000, 0.884000, 0.922000, 0.955000, 0.980000, 0.993000, 1.000000/)

  stat = vgd_new(vgd,kind=1,version=1,hyb=sigma)
  
  stat = vgd_print(vgd,stdout=6,convip_L=.false.)

  stat = vgd_free(vgd)

stop



  print*,'============================================'
  print*,'The following error on level order is normal'
  sigma2=sigma
  sigma2(2)=sigma2(1)
  stat = vgd_new(vgd,kind=1,version=1,hyb=sigma2)

  if(stat.ne.VGD_ERROR)OK=.false.  
  stat = vgd_free(vgd)

  print*,'==================================================='
  print*,'The following error on last level not 1.0 is normal'
  sigma2=sigma
  sigma2(nk)=1.1
  stat = vgd_new(vgd,kind=1,version=1,hyb=sigma2)
  if(stat.ne.VGD_ERROR)OK=.false.

  print*,'==================================================================='
  print*,'The following error on allocation is normal since vgd_free was done and ALLOW_RESHAPE is false by default'
  stat = vgd_new(vgd,kind=1,version=1,hyb=sigma)
  if(stat.ne.VGD_ERROR)OK=.false.

stop

  call ut_report(OK,'Grid_Descriptors::vgd_new vertical generate initializer (1001) value')

end program constructor

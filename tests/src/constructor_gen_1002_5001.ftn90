program constructor

  use vGrid_Descriptors, only: vgrid_descriptor,vgd_new,vgd_get,VGD_ERROR
  use Unit_Testing, only: ut_report

  implicit none

  type(vgrid_descriptor) :: d
  integer :: stat
  real :: epsilon=1.e-6
  !From /home/binops/afsi/sio/datafiles/constants/modeles/GEMDM/glb_033L80_g1_20090922/gem_settings.nml
  real, dimension(28) :: hyb=(/&
       0.0125000,0.0233625,0.0391625,0.0628625,0.0865625,&
       0.1122375,0.1379125,0.1655625,0.1951875,0.2287625,&
       0.2672750,0.3107250,0.3591125,0.4124375,0.4667500,&
       0.5220500,0.5793250,0.6356125,0.6919000,0.7472000,&
       0.7985500,0.8439750,0.8854500,0.9229750,0.9555625,&
       0.9802499,0.9930875,1.0000000&
       /)
  real, dimension(28) :: hyb_N=(/&
       0.000,   0.011,    0.027,    0.051,    0.075,&
       0.101,   0.127,    0.155,    0.185,    0.219,&
       0.258,   0.302,    0.351,    0.405,    0.460,&
       0.516,   0.574,    0.631,    0.688,    0.744,&
       0.796,   0.842,    0.884,    0.922,    0.955,&
       0.980,   0.993,    1.000&
       /)
  real :: rcoef1=1.6
  real*8 :: ptop=-1,ptop_N=1000.d0,pref=80000.d0,w1
  real*8, dimension(:), pointer :: b_m_8,a_m_8
  logical :: OK=.true.
  
  ! Testing 1002
  !
  print*,''
  print*,'===== 1002 Test on Error ptop<0, error message is normal ===='
  stat = vgd_new(d,kind=1,version=2,hyb=hyb_N,ptop_8=-1.d0)
  if(stat.ne.VGD_ERROR)OK=.false.  
  !
  print*,''  
  print*,'===== 1002 Test on complete level set ===='
  stat = vgd_new(d,kind=1,version=2,hyb=hyb_N,ptop_8=ptop_N)
  stat = vgd_get(d,key='CB_M - vertical B coefficient',value=b_m_8)
  stat = vgd_get(d,key='CA_M - vertical A coefficient',value=a_m_8)
  if(.not.(abs(b_m_8(2)-1.1000001E-02)/1.1000001E-02<epsilon))then
     OK=.false.
     print*,'Probleme avec B 1002'
     print*,b_m_8(2),' should equal ',1.1000001E-02
  endif
  if(.not.(abs(a_m_8(2)-989.0000)/989.0000<epsilon))then
     OK=.false.
     print*,'Probleme avec A 1002'
     print*,a_m_8(2),' should equal ',989.0000
  endif
  !
  print*,''  
  print*,'===== 1002 Test on incomplete level set ===='
  stat = vgd_new(d,kind=1,version=2,hyb=hyb_N(10:28),ptop_8=ptop_N)
  stat = vgd_get(d,key='CB_M - vertical B coefficient',value=b_m_8)
  stat = vgd_get(d,key='CA_M - vertical A coefficient',value=a_m_8)
  w1=0.2189999967813492
  if(.not.(abs(b_m_8(1)-w1)/w1<epsilon))then
     OK=.false.
     print*,'Probleme avec B 1002'
     print*,b_m_8(1),' should equal ',w1
  endif
  w1=780.9996604919434
  if(.not.(abs(a_m_8(1)-w1)/w1<epsilon))then
     OK=.false.
     print*,'Probleme avec A 1002'
     print*,a_m_8(1),' should equal ',w1
  endif

  ! Testing 5001
  !
  print*,''
  print*,'===== Test on Error ptop>hyb(1), error message is normal ===='
  ptop=100000.

  stat = vgd_new(d,kind=5,version=1,hyb=hyb,rcoef1=rcoef1,ptop_8=ptop,pref_8=pref)
  if(stat.ne.VGD_ERROR)OK=.false.
  !
  print*,''
  print*,'===== Test on Error ptop<=0, error message is normal ===='
  ptop=-1.
  stat = vgd_new(d,kind=5,version=1,hyb=hyb,rcoef1=rcoef1,ptop_8=ptop,pref_8=pref)
  if(stat.ne.VGD_ERROR)OK=.false.
  !
  print*,''
  print*,'===== Test complete level set ===='
  ptop=hyb(1)*pref
  w1=ptop
  stat = vgd_new(d,kind=5,version=1,hyb=hyb,rcoef1=rcoef1,ptop_8=ptop,pref_8=pref)
  if(.not.(abs(ptop-w1)/w1<epsilon))then
     OK=.false.
     print*,'Probleme avec ptop 5001'
     print*,ptop,' should equal ',w1
  endif
  stat = vgd_get(d,key='CB_M - vertical B coefficient',value=b_m_8)
  stat = vgd_get(d,key='CA_M - vertical A coefficient',value=a_m_8)
  if(.not.(abs(b_m_8(2)-7.3490012E-04)/7.3490012E-04<epsilon))then
     OK=.false.
     print*,'Probleme avec B 5001'
     print*,b_m_8(2),' should equal ',7.3490012E-04
  endif
  if(.not.(abs(a_m_8(2)-1810.208)/1810.208<epsilon))then
     OK=.false.
     print*,'Probleme avec A 5001'
     print*,a_m_8(2),' should equal ',1810.208
  endif
  !
  print*,''
  print*,'===== Test incomplete level set ===='
  stat = vgd_new(d,kind=5,version=1,hyb=hyb(10:28),rcoef1=rcoef1,ptop_8=ptop,pref_8=pref)
  stat = vgd_get(d,key='CB_M - vertical B coefficient',value=b_m_8)
  stat = vgd_get(d,key='CA_M - vertical A coefficient',value=a_m_8)
  w1=8.8046513497829437E-002
  if(.not.(abs(b_m_8(1)-w1)/w1<epsilon))then
     OK=.false.
     print*,'Probleme avec B 5001'
     print*,b_m_8(1),' should equal ',w1
  endif
  w1=11257.31885433197
  if(.not.(abs(a_m_8(1)-w1)/w1<epsilon))then
     OK=.false.
     print*,'Probleme avec A 5001'
     print*,a_m_8(1),' should equal ',w1
  endif

  call ut_report(OK,'Grid_Descriptors::vgd_new vertical generate initializer (5001) value')

end program constructor

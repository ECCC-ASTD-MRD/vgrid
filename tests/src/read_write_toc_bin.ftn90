program constructor
  use vGrid_Descriptors, only: grid_descriptor,gd_new,gd_get,gd_write,GD_ERROR
  use Unit_Testing, only: ut_report

  implicit none

  type(grid_descriptor) :: d,d_rtn
  integer :: stat,lu=0,fnom,fstouv,fstfrm,fclos,k
  integer, parameter :: LEVS=4
  integer, dimension(LEVS) :: ip1s
  real(kind=8), dimension(LEVS) :: pres=(/1000.,925.,850.,700./),b=(/0.,0.,0.,0./)
  real*8, dimension(:), pointer :: pres_rtn

  lu = 10
  open(unit=lu,file='test.bin',form='unformatted')

  ! Construct a new set of 3D coordinate descriptors
  do k=1,LEVS
     call convip(ip1s(k),pres(k),2,2,'',.false.)
  enddo
  pres = pres*100. !convert mb to Pa
  stat = gd_new(d,kind=2,version=1,nk=size(pres),ip1_m=ip1s,a_m_8=pres,b_m_8=b)
  stat = gd_write(d,unit=lu,format='bin')
  rewind(lu)
  stat = gd_new(d_rtn,unit=lu,format='bin',ip1=0,ip2=0)
  stat = gd_get(d_rtn,key='COFA - vertical A coefficient',value=pres_rtn)
  call ut_report(abs(pres_rtn(1)-pres(1)) < epsilon(pres),'Grid_Descriptors::gd_new vertical build initializer (2001) value')

  close(10)

  ! Cleanup
  call system('rm -f test.fst')

end program constructor

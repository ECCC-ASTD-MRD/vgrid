program constructor

  use vGrid_Descriptors, only: vgrid_descriptor,vgd_new,vgd_write,vgd_print,vgd_levels,VGD_OK,VGD_ERROR
  use Unit_Testing, only: ut_report

  implicit none

  type(vgrid_descriptor) :: d
  integer, parameter :: nmax=1000
  integer, dimension(nmax) :: liste
  integer :: fnom,fstouv,fstfrm,fstinl,ni,nj,nk,infon,fstluk,k
  integer :: stat,lu=10
  real, dimension(:,:,:), pointer :: levels,px
  real, parameter :: epsilon=1.0e-6
  real :: ff

  logical :: OK=.true.,in_log

  stat=fnom(lu,"data/dm_1002_from_model_run_multi_pt","RND",0)

  if(stat.lt.0)then
     print*,'ERROR with fnom'
     call abort
  endif
  stat=fstouv(lu,"RND")
  if(stat.lt.0)then
     print*,'Error with fstouv'
     call abort
  endif

  stat=vgd_new(d,lu)
  if(stat.eq.VGD_ERROR)stop
  
  stat=vgd_print(d,6)  
  if(stat.eq.VGD_ERROR)stop

  stat=fstinl(lu,ni,nj,nk,-1,' ',-1,-1,-1,' ','PX',liste,infon,nmax)
  
  allocate(levels(ni,nj,infon),px(ni,nj,infon))

  stat=vgd_levels(d,lu,liste(1:infon),levels,in_log=in_log)
  if(stat.eq.VGD_ERROR)stop

  do k=1,infon
     stat=fstluk(px(1,1,k),liste(k),ni,nj,nk)
     if(stat.lt.0)stop
  enddo

  do k=1,infon
     ff=abs(px(1,1,k)-levels(1,1,k)/100.)/px(1,1,k)
     if(ff.gt.epsilon)then        
        print*,'OUPS, difference should be equal within epsilon',px(1,1,k),levels(1,1,k)/100.
        print*,'But found difference of',ff
        stop
     endif
  enddo

  stat=fstfrm(lu)

  call ut_report(OK,'Grid_Descriptors::vgd_vintage (1002 eta)')

end program constructor

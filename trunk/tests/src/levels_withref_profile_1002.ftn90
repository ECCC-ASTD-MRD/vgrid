program tests
  use vGrid_Descriptors, only: vgrid_descriptor,vgd_new,vgd_levels,VGD_OK
  use Unit_Testing, only: ut_report

  implicit none

  integer :: stat,lu=0,ni,nj,fnom,fstouv,fstfrm,fclos,fstlir,fstinf,k,lutxt=69,ip1,ip2
  integer, parameter :: i0=20,j0=10,nk=5
  integer, dimension(:), pointer :: ip1_list
  real, dimension(:), pointer :: pres_profil
  real :: epsilon=0.01
  real, dimension(:,:), allocatable :: p0,px
  real, dimension(:,:,:), pointer :: lev
  real :: local_pres
  type(vgrid_descriptor) :: d
  logical :: ok

  stat=fnom(lu,"data/dm_1002_from_model_run_plus_toc","RND",0)
  if(stat.lt.0)then
     print*,'ERROR with fnom'
     call abort
  endif
  stat=fstouv(lu,'RND')
  if(stat.lt.0)then
     print*,'No record in RPN file'
     call abort
  endif
  open(unit=lutxt,file='data/dm_1002_ips.txt',status='OLD')
  read(lutxt,*) ip1,ip2
  close(lutxt)

  ! Get physical levelling information
  stat = vgd_new(d,unit=lu,format="fst",ip1=ip1,ip2=ip2)
  
  stat = fstinf(lu,ni,nj,nk,-1,' ',-1,-1,-1,' ',"UU")

  allocate(p0(ni,nj),ip1_list(5),px(ni,nj))

  ip1_list=(/11220,11550,11800,11930,12000/)

  stat = fstlir(p0,lu,ni,nj,nk,-1,'',-1,-1,-1,'','P0')
  p0 = p0*100. !mb to Pa
  
  local_pres=p0(i0,j0)  

  stat = vgd_levels(d,sfc_field=local_pres,ip1_list=ip1_list,levels=pres_profil)
  if(stat.ne.VGD_OK)then
     print*,'ERROR: problem with vgd_levels'
     stat=fstfrm(lu)
     call abort
  endif

  pres_profil=pres_profil*.01
  print*,'size(pres_profil)',size(pres_profil)

  OK=.true.
  do k=1,nk
     stat = fstlir(px,lu,ni,nj,nk,-1,'',ip1_list(k),-1,-1,'','PX')
     print*,px(i0,j0),pres_profil(k)
     if(abs(pres_profil(k)-px(i0,j0))>epsilon)then
        print*,'OUPS'
        OK=.false.
     endif
  enddo
  
  call ut_report(ok,message='Grid_Descriptors::vgd_levels level calculation status')

  stat=fstfrm(lu)

end program tests
